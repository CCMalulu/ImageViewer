#setting title, Gamma Correction
#setting description, Nonlinear operation used to encode and decode luminance or tristimulus values in video or still image systems. Formula: |Factor * V| ^ (1/Gamma).

#param Gamma, 3, float, 1, 0
#paramprop Gamma, onSubtract, -0.1, add
#paramprop Gamma, onAdd, 0.1, add

#param Factor, 2, float, 1.0, 0

#param Per Channel Gamma, 4, bool, false

#keybinding Factor, Add, 2.0, multiply
#keybinding Factor, OemPlus, 2.0, multiply
#keybinding Factor, Subtract, 0.5, multiply
#keybinding Factor, OemMinus, 0.5, multiply

layout(location = 3) uniform float gamma;
layout(location = 2) uniform float factor;
layout(location = 4) uniform bool perChannel; 

void main()
{
	ivec2 pixelCoord = ivec2(gl_GlobalInvocationID.xy) + pixelOffset;

	vec4 color = texelFetch(src_image, pixelCoord, 0);
	color.rgb = abs(color.rgb * factor);
	if(perChannel)
	{
		color.rgb = pow(color.rgb, vec3(1.0 / gamma));
	}
	else
	{
		// this luminance looks better
		float lum = dot(color.rgb, vec3(0.299, 0.587, 0.114));
		//float lum = dot(color.rgb, vec3(0.2126, 0.7152, 0.0722));
		float newLum = pow(lum, 1.0/gamma);
		color.rgb = color.rgb / lum * newLum;
	}
	imageStore(dst_image, pixelCoord, color);
	
}